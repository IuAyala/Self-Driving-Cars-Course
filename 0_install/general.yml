---
  - hosts: localhost
    tasks:
      # -------------------- python --------------------
      - name: Install python (All)
        become: true
        package:
          name:
            - python3
            - git

      - name: Install python virtual environment wrapper (Fedora | Ubuntu)
        become: true
        when: ansible_distribution == 'Ubuntu' or ansible_distribution == 'Fedora'
        package:
          name:
            - python3-virtualenvwrapper

      - name: Install python virtual environment wrapper (Archlinux)
        become: true
        when: ansible_distribution == 'Archlinux'
        package:
          name:
            - python-virtualenvwrapper

      - name: Install virtualenvwrapper in pip3
        pip:
          name: virtualenvwrapper
          executable: pip3

      # - name: Create virtual environment (Ubuntu)
      #   when: ansible_distribution == 'Ubuntu'
      #   shell: . /usr/share/virtualenvwrapper/virtualenvwrapper.sh && mkvirtualenv ml
      #   args:
      #     executable: /bin/bash

      # - name: Create virtual environment (Archlinux)
      #   when: ansible_distribution == 'Archlinux'
      #   shell: . /usr/bin/virtualenvwrapper.sh && mkvirtualenv ml
      #   args:
      #     executable: /bin/bash

      - name: Install python libraries
        pip:
          requirements: "{{ playbook_dir }}/requirements.txt"

      # -------------------- code --------------------
      - name: Microsoft GPG key (CentOS | Fedora)
        become: true
        when: ansible_distribution == 'CentOS' or ansible_distribution == 'Fedora'
        command: rpm --import https://packages.microsoft.com/keys/microsoft.asc

      - name: Add vscode repo (CentOS | Fedora)
        become: true
        when: ansible_distribution == 'CentOS' or ansible_distribution == 'Fedora'
        blockinfile:
          mode: 0644
          dest: /etc/yum.repos.d/vscode.repo
          create: true
          block: |
            [code]
            name=Visual Studio Code
            baseurl=https://packages.microsoft.com/yumrepos/vscode
            enabled=1
            gpgcheck=1
            gpgkey=https://packages.microsoft.com/keys/microsoft.asc

      - name: Install vscode (Fedora | CentOS)
        become: true
        when: ansible_distribution == 'CentOS' or ansible_distribution == 'Fedora'
        package:
          name: code
          state: present

      - name: Get micorosft key (Ubuntu)
        when: ansible_distribution == 'Ubuntu'
        shell: wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
        args:
          chdir: /tmp

      - name: Install dowloaded key (Ubuntu)
        become: true
        when: ansible_distribution == 'Ubuntu'
        command: install -o root -g root -m 644 packages.microsoft.gpg /etc/apt/trusted.gpg.d/
        args:
          chdir: /tmp

      - name: Create code.list in source.list.d/ (Ubuntu)
        become: true
        when: ansible_distribution == 'Ubuntu'
        command: sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'

      # - name: Install code (Ubuntu) through Snap
      #   become: true
      #   when: ansible_distribution == 'Ubuntu'
      #   snap:
      #     name: code
      #     classic: yes

      - name: Install code (Archlinux)
        when: ansible_distribution == 'Archlinux'
        yay:
          name: visual-studio-code-bin


      # -------------------- Environment Variables --------------------
      - name: Add line to .bashrc for PYTHONPATH (Webots libraries)
        ansible.builtin.lineinfile:
          path: "{{ ansible_env.HOME }}/.bashrc"
          line: export PYTHONPATH=${PYTHONPATH:+${PYTHONPATH}:}${WEBOTS_HOME}/lib/controller/python39

      - name: Add line to .bashrc for PYTHONDECODING
        ansible.builtin.lineinfile:
          path: "{{ ansible_env.HOME }}/.bashrc"
          line: export PYTHONIOENCODING=UTF-8

      - name: Add line to .bashrc for LD_LIBRARY_PATH 
        ansible.builtin.lineinfile:
          path: "{{ ansible_env.HOME }}/.bashrc"
          line: export LD_LIBRARY_PATH=${LD_LIBRARY_PATH:+${LD_LIBRARY_PATH}:}/usr/local/webots/lib/controller # Add line

